####### Global Parameters #########

debug=3
log_stderror=no
log_facility=LOG_LOCAL0

fork=yes
children=4

/* uncomment the following lines to enable debugging */
#debug=6
#fork=no
#log_stderror=yes

/* uncomment the next line to enable the auto temporary blacklisting of
   not available destinations (default disabled) */
#disable_dns_blacklist=no

/* uncomment the next line to enable IPv6 lookup after IPv4 dns
   lookup failures (default disabled) */
#dns_try_ipv6=yes

/* comment the next line to enable the auto discovery of local aliases
   based on revers DNS on IPs */
auto_aliases=no
alias=

listen=udp:10.30.77.144:5060   # CUSTOMIZE ME
advertised_address=""
server_header="Server: "

disable_tcp=yes

#disable_tls=yes


####### Modules Section ########

#set module path
mpath="/lib/opensips/modules/"

#### SIGNALING module
loadmodule "signaling.so"

#### StateLess module
loadmodule "sl.so"

#### Transaction Module
loadmodule "tm.so"
modparam("tm", "fr_timer", 5)
modparam("tm", "fr_inv_timer", 30)
modparam("tm", "restart_fr_on_each_reply", 0)
modparam("tm", "onreply_avp_mode", 1)

#### Record Route Module
loadmodule "rr.so"
/* do not append from tag to the RR (no need for this script) */
modparam("rr", "append_fromtag", 0)

#### MAX ForWarD module
loadmodule "maxfwd.so"

#### SIP MSG OPerationS module
loadmodule "sipmsgops.so"

#### FIFO Management Interface
loadmodule "mi_fifo.so"
modparam("mi_fifo", "fifo_name", "/tmp/opensips_fifo")
modparam("mi_fifo", "fifo_mode", 0666)

#### MYSQL module
loadmodule "db_mysql.so"


#### Local Cache
loadmodule "cachedb_local.so"


#### REGISTRAR module
loadmodule "registrar.so"
loadmodule "uri.so"
loadmodule "exec.so"

loadmodule "avpops.so"
modparam("avpops", "db_url",
        "mysql://opensips:opensipsrw@localhost/opensips") # CUSTOMIZE ME
modparam("avpops","db_url","1 mysql://honeypot:<Who Knows>@localhost/honeypot")

loadmodule "mmgeoip.so"
modparam("mmgeoip", "mmgeoip_city_db_path",
  "/etc/opensips/GeoLiteCity.dat")

server_header="Server: Asterisk 1.8.11"
####### Routing Logic ########

# main request routing logic

route{


        #Detect sql injection
        if($au =~ "(\=)|(\-\-)|(')|(\#)|(\%27)|(\%24)" and $au != null) {
                   xlog("L_INFO","Someone from $si is doing an sql injection attack, blocking! $aU");
                   exit;
        }
        if($(ct{uri.user}) =~ "(\=)|(\-\-)|(')|(\#)|(\%27)|(\%24)" and $(ct{uri.user}) != null) {
                   xlog("L_INFO","Someone from $si is doing an sql injection attack, blocking! $ct");
                   exit;
        }
        if($fU=~"(\=)|(\-\-)|(')|(\#)|(\%27)|(\%24)" and $fU != null) {
                   xlog("L_INFO","Someone from $si is doing an sql injection attack, blocking! $fU");
                   exit;
        }


        mmg_lookup("cc","$si","$avp(cc)");

        xlog("L_WARN", "54.242.194.62,$si,$rm,$fu,$ru,$ua,$avp(cc)");
        if(is_method("INVITE")) avp_db_query("INSERT INTO honeypot values('54.242.194.62', '$si', '$rm', '$fu', '$ru', '$ua', '$avp(cc)', now(),'NA')");

        #IP Address automatic insertion
        if(is_method("INVITE|REGISTER")) {
                #insert only one detection
                $avp(dnis)=0;
                if(!cache_fetch("local","ipblk_$si",$avp(dnis))) {
                        avp_db_query("INSERT IGNORE INTO ip_blacklist (ip,method,ip_str,country) values(INET_ATON('$si'),'$rm','$si','$avp(cc)')","","1");
                } else {
                        if($(avp(dnis){s.int})>200) exec_msg("sudo iptables -A INPUT -s '$si' -j DROP");
                        if($(avp(dnis){s.int})>200) xlog("L_INFO", "Estourou contagem");
                }
                cache_add("local","ipblk_$si",1,3600);
        }

        if(is_method("INVITE") && $rU=~"^(\+|9011[1-9]|011[1-9]|00[1-9])") {


                $avp(dest)="";
                #Hacker try several different sequences, it is hard to discover the real number stick with + and 9011, usually it sends the real prefix after those
                if($rU=~"^\+") $avp(dest)=$(rU{s.substr,1,0});
                if($rU=~"^9011[1-9]") $avp(dest)=$(rU{s.substr,4,0});
                if($rU=~"^011[1-9]") $avp(dest)=$(rU{s.substr,3,0});
                if($rU=~"^00[1-9]") $avp(dest)=$(rU{s.substr,2,0});

                #Verify if prefix is at least 6 digits to avoid small prefixes in the database
                if($(rU{s.len})>=6) {
                        if($rU=~"^(9[976]|8[987530]|6[987]|5[90]|42|3[875]|2[98654321]|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)") {
                                #Insert only one detection
                                if(!cache_fetch("local","dnisblk_$rU",$var(dnis))) {
                                        avp_db_query("INSERT IGNORE INTO globalblacklist (prefix,description,dt) values('$avp(dest)','honeypot_us',now())","","1");
                                }
                                cache_store("local","dnisblk_$rU","$rU");
                        }
                }
        }

        # CANCEL processing
        if (is_method("CANCEL"))
        {
                if (t_check_trans())
                        t_relay();
                exit;
        }

        t_check_trans();

		    #Incentivize the fraudsters
        if ( !(is_method("REGISTER|OPTIONS")  ) ) {
			    sl_send_reply("200", "OK");
			    exit;
        }

        # preloaded route checking
        if (loose_route()) {
                xlog("L_ERR",
                "Attempt to route with preloaded Route's [$fu/$tu/$ru/$ci]");
                if (!is_method("ACK"))
                        sl_send_reply("403","Preload Route denied");
                exit;
        }

        if (is_method("PUBLISH|SUBSCRIBE"))
        {
                sl_send_reply("503", "Service Unavailable");
                exit;
        }
		
}
